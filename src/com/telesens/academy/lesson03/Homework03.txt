# Задачи на строки и массивы
=====================================================
Герберт Шилдт Java 8. "Руководство для начинающих"
	- массивы - стр.159-182
	- строки - стр. 182-200
=====================================================
	Одно из выполненных заданий:
		- упаковать в  *.jar 
		- запустить из *.jar (указывая путь к main классу)

ТРЕБОВАНИЯ: 
		- логика задач должна быть реализована в соответствующих методах
		- метод main не содержит логики, а содержит только вызовы методов
		- под "программой" понимать либо отдельный класс, либо отдельный проект
		
ОБЯЗАТЕЛЬНЫЕ ЗАДАЧИ:
		
***********Строки***********
1) Напишите программу, которая:
	- считывает строку
	- выводит исходную строку
	- выводит количество и список слов, которые начинаются на букву 'd'

2) Напишите программу, которая:
	- считывает строку
	- выводит исходную строку
	- выводит количество и список, которые заканчиваются буквами 'ED'

3) Напишите программу, которая:
	- считывает строку
	- считывает подстроку
	- выводит исходные строку и подстроку и выводит кол-во вхождений строки в подстроку

4) Реализовать программу, которая:
	- считывает с клавиатуры строку 
	- удаляет из строки все цифры
	- выводит исходную строку
	- выводит преобразованную строку
	- выводит список удаленных символов
	
5) Реализовать программу, которая:
	- считывает строку
	- меняет местами порядок символов (напр. "abcd" => "dcba")
	- выводит исходную строку
	- выводит перевернутую строку
	
6) Реализовать программу, которая:
	- считывает строку 
	- выводит исходную строку на экран
	- выводит кол-во символов латиницы
	- выводит кол-во символов кириллицы
	
7) Реализовать программу, которая определяет, является ли строка палиндромом.
Палиндром - это строка, которая одинаково читается одинаково в обоих направлениях
(пример: "мадам" - палиндром, "адам" - не палиндром). 

	
***********Массивы***********
8) Реализовать программу, которая:
	- в диалоговом режиме запрашивает размер массива
	- заполняет массив случайными числами (целые числа)
	- меняет порядок элементов массива
	- сортирует массив
	- выводит исходный массив 
	- выводит перевернутый массив
	- выводит отсортированный массив
	
9) Реализовать программу, которая:
	- в диалоговом режиме запрашивает размер двумерного массива 
	- в диалоговом режиме считывает элементы массива (дробные трехзначные числа с двумя знаками после запятой)
	- выводите массив в виде отформатированном виде (оставляя два знака после запятой), напр. для массива размером 3:
	
		|3.14   2.7    124.45|
		|15.55  112.76 4.45  |
		|5      0      -66   |
		
	- определяет и выводит на экран: 
		-- минимальный элемент (-66)
		-- максимальный (124.45)
		-- номер строки, сумма элементов которой максимальна (в данном примере 2-ая строка)
		-- номер строки, сумма которых минимальна (в данном примере 3)
		
		
10) Реализовать программу, которая:
		-принимает строку
		-выводит массив слов, которые содержат символ @
			
		Например:
			Входная строка: 
				"Если возникли вопросы обращайтесь в службу поддержки support@gmail.com или central.office@mail.com"
			Результат:
				[support@gmail.com, central.office@mail.com]
		
11) Реализовать приложение, которое случайным образом генерирует информацию о пользователе и выводит карточку пользователя на консоль:
		a) id (должно быть уникально)
		b) Имя
		c) Фамилия
		d) пол ('м', 'ж')
		e) Возраста от 18 до 60 (желательно использовать Гауссово распределение) 
		
		
		Сгенерировать 10 пользователей и вывести на консоль:
		
			------------------
			id: 1
			Имя: Иван
			Фамилия: Петров
			Пол: м
			Возраст: 25
			------------------
			id:2
			Имя: Катя
			Фамилия: Полипчук
			Пол: ж
			Возраст: 32
			------------------
			....
		
НЕОБЯЗАТЕЛЬНЫЕ ЗАДАЧИ ПОВЫШЕННОЙ СЛОЖНОСТИ:

12)* Корректор
	Ввести с клавиатуры строку. 
	Удалить лишние пробелы, в том числе начальные и конечные. 
	Внутри слов большие буквы заменить маленькими. 
	Если перед словами, начинающимися с большой буквы, нет точки, добавить точку в конце предшествующих слов. 
	Сформировать и вывести на экран слова, начинающиеся на мягкий знак.
	
13)*** Форматированный вывод текста
	Осуществить форматирование текста с выравниванием по ширине. 
	Текст разбить на строки с длиной, не превосходящей заданного количества символов. 
	Если очередное слово не помещается в текущей строке, его необходимо переносить на следующую.
	
14)** Транслятор
	Ввести с клавиатуры строку программного кода. 
	Проверить соответствие фигурных скобок. 
	Заменить открывающиеся фигурные скобки словом begin, а закрывающиеся – словом end. 
	Использовать класс StringBuilder.
	
15)**** Реализовать небольшой парсер html кода, который: 
		- принимает html текст
		- принимает название элемента 
		- название атрибута
			=> выводит массив значений атрибутов. 
		
		Проверить на тестовом примере ниже:
			- для элементов: div/id, input/text, img/src
		
		Например, html:
			<!DOCTYPE html>
				<html lang="en">
				<head>
					<meta charset="UTF-8">
					<title>Title</title>
				</head>
				<body>
					<h3>Content</h3>
					<div id="23">
						<input type="text" />
						<div id="35">
							<p>message</p>
							<img  src="./figure.png" alt="no-image"/>
						</div>
					</div>
					<div id="48">
						<img  src="./scheme.png" alt="no-image"/>
					</div>
				</body>
			</html>
			
		Элемент:
			div
		Название аттрибута 
			id
		Результат:
			=> [23, 35, 46]
